{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addstorylist/addstorylist.component.html","webpack:///./src/app/addstorylist/addstorylist.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/developer/viewasdeveloper.component.html","webpack:///./src/app/developer/viewasdeveloper.component.ts","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/helpers/globals.ts","webpack:///./src/app/helpers/signalResolver.ts","webpack:///./src/app/scrummaster/viewasscrummaster.component.html","webpack:///./src/app/scrummaster/viewasscrummaster.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <label for=\\\"sessionName\\\" style=\\\"padding-left: 0; padding-top: 5px;\\\" class=\\\"col-md-4\\\">Session Name</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"sessionName\\\" class=\\\"form-control\\\" id=\\\"sessionName\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n      <label for=\\\"numberVoters\\\" style=\\\"padding-left: 0; padding-top: 5px;\\\" class=\\\"col-md-4\\\">Number of Voters</label>\\r\\n      <input type=\\\"number\\\" [(ngModel)]=\\\"numberVoters\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"numberVoters\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" style=\\\"padding-top: 30px;\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <label for=\\\"storyList\\\">Paste Your Story List (Each line will be converted as a story)</label>\\r\\n      <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"storyList\\\" id=\\\"storyList\\\" style=\\\"min-width: 100%; min-height: 250px;\\\"></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" style=\\\"padding-top: 30px; text-align: right\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"startSessions()\\\" class=\\\"btn btn-default\\\">Start Session</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { ConnectionResolver } from '../helpers/signalResolver';\r\nimport { BroadcastEventListener } from 'ng2-signalr';\r\n\r\n@Component({\r\n  selector: 'app-addstorylist',\r\n  templateUrl: './addstorylist.component.html',\r\n})\r\nexport class AddStoryListComponent implements OnInit {\r\n  sessionName = '';\r\n  numberVoters = 0;\r\n  storyList = '';\r\n  storyArray: String[];\r\n  constructor(private toastr: ToastrService, private router: Router, private connectionResolver: ConnectionResolver) { }\r\n\r\n  checkConventions() {\r\n    if (this.sessionName.length > 200) {\r\n      this.showError(\"Session name cannot exceed 200 characters!\");\r\n      return false;\r\n    }\r\n    if (!this.sessionName) {\r\n      this.showError(\"Session name cannot be null or empty!\");\r\n      return false;\r\n    }\r\n    if (this.numberVoters <= 0) {\r\n      this.showError(\"Number of voters cannot be under 0 or equal 0!\");\r\n      return false;\r\n    }\r\n    if (!this.numberVoters) {\r\n      this.showError(\"Number of voters cannot be null or empty!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  showError(error) {\r\n    this.toastr.error(error,\r\n      'Error',\r\n      {\r\n        timeOut: 3000\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      let onSessionExist = new BroadcastEventListener('SessionExist');\r\n      c.listen(onSessionExist);\r\n\r\n      onSessionExist.subscribe((result: any) => {\r\n        console.log(\"SessionExist: \", result);\r\n        if (result === \"Session already exists!\") {\r\n          this.showError(\"Session already exists!\");\r\n        } else\r\n          this.router.navigateByUrl('/poker-planning-view-as-scrummaster/' + this.sessionName);\r\n      });\r\n    });\r\n  }\r\n\r\n  startSessions() {\r\n    if (this.checkConventions()) {\r\n      this.storyArray = this.storyList.split(new RegExp('[,;\\n]', 'g'));\r\n      this.connectionResolver.getSignalR().then((c) => {\r\n        c.invoke('CreateSession', this.sessionName, this.numberVoters, this.storyArray).then(() => {\r\n\r\n        });\r\n      });\r\n      //this.router.navigateByUrl('/poker-planning-view-as-scrummaster/' + this.sessionName);\r\n    }\r\n      \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddStoryListComponent } from './addstorylist/addstorylist.component';\nimport { ViewAsScrumMasterComponent } from './scrummaster/viewasscrummaster.component';\nimport { ViewAsDeveloperComponent } from './developer/viewasdeveloper.component';\nimport { ErrorComponent } from './error/error.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path: 'poker-planning-add-story-list',\n    component: AddStoryListComponent\n  },\n  {\n    path: 'poker-planning-view-as-scrummaster',\n    component: ErrorComponent\n  },\n  {\n    path: 'poker-planning-view-as-developer',\n    component: ErrorComponent\n  },\n  {\n    path: 'poker-planning-view-as-scrummaster/:sessionName',\n    component: ViewAsScrumMasterComponent\n  },\n  {\n    path: 'poker-planning-view-as-developer/:sessionName',\n    component: ViewAsDeveloperComponent\n  },\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, HostListener } from '@angular/core';\nimport { ConnectionResolver } from './helpers/signalResolver';\nimport { ConnectionStatus } from 'ng2-signalr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(private connectionResolver: ConnectionResolver) {\n    connectionResolver.getSignalR().then((c) => {\n      c.status.subscribe((status: ConnectionStatus) => {\n        console.log(\"status change\", status);\n        if (status.value === 1)\n            console.log(\"Bağlanılıyor.\");\n        if (status.value === 2)\n            console.log(\"Bağlanıldı.\");\n        if (status.value === 3)\n            console.log(\"Yeniden Bağlanılıyor.\");\n        if (status.value === 4) {\n          console.log(\"Bağlantı Koptu.\");\n        }\n      });\n      c.errors.subscribe((error: any) => {\n        console.log(\"error\", error);\n      });\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddStoryListComponent } from './addstorylist/addstorylist.component';\nimport { ViewAsScrumMasterComponent } from './scrummaster/viewasscrummaster.component';\nimport { ViewAsDeveloperComponent } from './developer/viewasdeveloper.component';\nimport { ErrorComponent } from './error/error.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { SignalRModule } from 'ng2-signalr';\nimport { ConnectionResolver } from './helpers/signalResolver';\nimport { Globals } from './helpers/globals';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddStoryListComponent,\n    ViewAsScrumMasterComponent,\n    ViewAsDeveloperComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ToastrModule.forRoot(),\n    SignalRModule.forRoot(Globals.createConfig)\n  ],\n  providers: [\n    ConnectionResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <div *ngIf=\\\"isSessionFull\\\">\\r\\n    <h1>Error.</h1>\\r\\n    <h2>Session is full!</h2>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"noSuchSession\\\">\\r\\n    <h1>Error.</h1>\\r\\n    <h2>There is no such session!</h2>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isSessionFull && !noSuchSession\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <label for=\\\"storyList\\\" style=\\\"padding-left: 8px;\\\" class=\\\"col-md-4\\\">Story List</label>\\r\\n      <table id=\\\"storyList\\\" class=\\\"table\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Story</th>\\r\\n          <th scope=\\\"col\\\">Story Point</th>\\r\\n          <th scope=\\\"col\\\">Status</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let story of session?.StoryList\\\">\\r\\n          <td>\\r\\n            {{story.StoryName}}\\r\\n          </td>\\r\\n          <td>\\r\\n            {{story.StoryPoint}}\\r\\n          </td>\\r\\n          <td>\\r\\n            <div *ngIf=\\\"story.Status==0\\\">Active</div>\\r\\n            <div *ngIf=\\\"story.Status==1\\\">Voted</div>\\r\\n            <div *ngIf=\\\"story.Status==2\\\">Not Voted</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label for=\\\"activeStory\\\" style=\\\"padding-left: 0\\\" class=\\\"col-md-4\\\">Active Story</label>\\r\\n      <small> {{activeStory}} </small>\\r\\n      <table id=\\\"activeStory\\\" style=\\\"margin-top: 40px;\\\" class=\\\"table\\\">\\r\\n        <tbody>\\r\\n        <tr>\\r\\n          <td><button (click)=\\\"sendVote(1);\\\" class=\\\"btn btn-default\\\">1</button></td>\\r\\n          <td><button (click)=\\\"sendVote(2);\\\" class=\\\"btn btn-default\\\">2</button></td>\\r\\n          <td><button (click)=\\\"sendVote(3);\\\" class=\\\"btn btn-default\\\">3</button></td>\\r\\n          <td><button (click)=\\\"sendVote(5);\\\" class=\\\"btn btn-default\\\">5</button></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><button (click)=\\\"sendVote(8);\\\" class=\\\"btn btn-default\\\">8</button></td>\\r\\n          <td><button (click)=\\\"sendVote(13);\\\" class=\\\"btn btn-default\\\">13</button></td>\\r\\n          <td><button (click)=\\\"sendVote(21);\\\" class=\\\"btn btn-default\\\">21</button></td>\\r\\n          <td><button (click)=\\\"sendVote(34);\\\" class=\\\"btn btn-default\\\">34</button></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><button (click)=\\\"sendVote(55);\\\" class=\\\"btn btn-default\\\">55</button></td>\\r\\n          <td><button (click)=\\\"sendVote(89);\\\" class=\\\"btn btn-default\\\">89</button></td>\\r\\n          <td><button (click)=\\\"sendVote(144);\\\" class=\\\"btn btn-default\\\">134</button></td>\\r\\n          <td><button (click)=\\\"sendVote(233);\\\" class=\\\"btn btn-default\\\">233</button></td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div *ngIf=\\\"sentVote\\\" style=\\\"text-align: center\\\">{{sentVote}} Voted</div>\\r\\n      <div *ngIf=\\\"!sentVote\\\" style=\\\"text-align: center\\\">Please Vote!!!</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ConnectionResolver } from '../helpers/signalResolver';\r\nimport { BroadcastEventListener } from 'ng2-signalr';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-viewasdeveloper',\r\n  templateUrl: './viewasdeveloper.component.html',\r\n})\r\n\r\nexport class ViewAsDeveloperComponent implements OnInit {\r\n  sessionName;\r\n  session;\r\n  isSessionFull = false;\r\n  activeStory;\r\n  activeStoryIndex;\r\n  sentVote;\r\n  sessionFinished = false;\r\n  noSuchSession = false;\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  beforeunloadHandler(event) {\r\n    this.leaveSession();\r\n  };\r\n\r\n  leaveSession() {\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      c.invoke('LeaveSession', this.sessionName).then(() => {\r\n        console.log(\"Çıkış yapıldı.\");\r\n      });\r\n    });\r\n  }\r\n\r\n  constructor(private toastr: ToastrService, private connectionResolver: ConnectionResolver, private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  sendVote(storyPoint) {\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      c.invoke('SendVote', this.sessionName, this.activeStory, storyPoint).then(() => {\r\n        this.sentVote = storyPoint;\r\n      });\r\n    });\r\n  }\r\n\r\n  showSuccess(msg) {\r\n    this.toastr.success(msg,\r\n      'Success',\r\n      {\r\n        timeOut: 3000\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(paramsId => {\r\n      this.sessionName = paramsId.sessionName;\r\n      console.log(\"sessionname \", this.sessionName);\r\n    });\r\n\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      let onJoinSession = new BroadcastEventListener('JoinSessionResult');\r\n      let onSendVote = new BroadcastEventListener('SendVoteResult');\r\n      let onSendFinalScore = new BroadcastEventListener('SendFinalScoreResult');\r\n      let onSessionFinished = new BroadcastEventListener('SessionFinished');\r\n      let onLeaveSession = new BroadcastEventListener('LeaveSessionResult');\r\n      c.listen(onLeaveSession);\r\n      c.listen(onSessionFinished);\r\n      c.listen(onJoinSession);\r\n      c.listen(onSendVote);\r\n      c.listen(onSendFinalScore);\r\n\r\n      onLeaveSession.subscribe((result: any) => {\r\n        console.log(\"LeaveSessionResult: \", result);\r\n        this.session = result;\r\n      });\r\n\r\n      onSessionFinished.subscribe((result: any) => {\r\n        console.log(\"SessionFinished: \", result);\r\n        this.sessionFinished = true;\r\n        this.showSuccess(result);\r\n      });\r\n\r\n      onSendFinalScore.subscribe((result: any) => {\r\n        console.log(\"SendFinalScoreResult: \", result);\r\n        this.session = result;\r\n        this.setActiveStory();\r\n        this.sentVote = null;\r\n      });\r\n      onJoinSession.subscribe((result: any) => {\r\n        console.log(\"JoinSessionResult: \", result);\r\n\r\n        if (result === \"Session is full!\")\r\n          this.isSessionFull = true;\r\n        else if (result === \"There is no such session!\")\r\n          this.noSuchSession = true;\r\n        else {\r\n          this.session = result;\r\n          this.setActiveStory();\r\n        }\r\n      });\r\n\r\n      onSendVote.subscribe((result: any) => {\r\n        console.log(\"SendVoteResult: \", result);\r\n        this.session = result;\r\n      });\r\n\r\n      c.invoke('JoinSession', this.sessionName).then(() => {});\r\n    });\r\n  }\r\n\r\n  setActiveStory() {\r\n    for (var i = 0; i < this.session.StoryList.length; i++) {\r\n      if (this.session.StoryList[i].Status === 0) {\r\n        this.activeStory = this.session.StoryList[i].StoryName;\r\n        this.activeStoryIndex = i;\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h1>Error.</h1>\\r\\n<h2>There is no such session.</h2>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent { }\r\n","declare function unescape(s: string): string;\r\ndeclare function escape(s: string): string;\r\nimport { SignalRConfiguration } from 'ng2-signalr';\r\n\r\nexport const Globals: any = {\r\n  signalRUrl: '/signalr_engine',\r\n  createConfig(): SignalRConfiguration {\r\n    const c = new SignalRConfiguration();\r\n    //c.hubName = hubName;\r\n    c.qs = { user: 'user_' + new Date() };\r\n    c.url = Globals.signalRUrl;\r\n    c.logging = false;\r\n    return c;\r\n  }\r\n};\r\n","import { SignalR, ISignalRConnection } from 'ng2-signalr';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ConnectionResolver {\r\n  signal: Promise<ISignalRConnection>;\r\n\r\n  constructor(private _signalR: SignalR) {\r\n    this.signal = _signalR.createConnection({ withCredentials: true, hubName: \"PokerHub\" }).start();\r\n  }\r\n    \r\n  newConnection() {\r\n    let connectionResolver = new ConnectionResolver(this._signalR);\r\n  }\r\n\r\n  getSignalR() {\r\n    return this.signal;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <div *ngIf=\\\"isSessionFull\\\">\\r\\n    <h1>Error.</h1>\\r\\n    <h2>Session is full!</h2>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"noSuchSession\\\">\\r\\n    <h1>Error.</h1>\\r\\n    <h2>There is no such session!</h2>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isSessionFull && !noSuchSession\\\" class=\\\"row\\\">\\r\\n    <div style=\\\"text-align: right; padding-bottom: 30px;\\\">\\r\\n      please share link of developers panel to the teammates:\\r\\n      <a target=\\\"_blank\\\" href=\\\"{{baseUrl}}/poker-planning-view-as-developer/{{encodedSessionName}}\\\">\\r\\n        {{baseUrl}}/poker-planning-view-as-developer/{{encodedSessionName}}\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n      <label for=\\\"storyList\\\" style=\\\"padding-left: 8px;\\\" class=\\\"col-md-4\\\">Story List</label>\\r\\n      <table id=\\\"storyList\\\" class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">Story</th>\\r\\n            <th scope=\\\"col\\\">Story Point</th>\\r\\n            <th scope=\\\"col\\\">Status</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let story of session?.StoryList\\\">\\r\\n            <td>\\r\\n              {{story.StoryName}}\\r\\n            </td>\\r\\n            <td>\\r\\n              {{story.StoryPoint}}\\r\\n            </td>\\r\\n            <td>\\r\\n              <div *ngIf=\\\"story.Status==0\\\">Active</div>\\r\\n              <div *ngIf=\\\"story.Status==1\\\">Voted</div>\\r\\n              <div *ngIf=\\\"story.Status==2\\\">Not Voted</div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label for=\\\"activeStory\\\" style=\\\"padding-left: 0;\\\" class=\\\"col-md-4\\\">Active Story</label>\\r\\n      <small>{{activeStory}}</small>\\r\\n      <table id=\\\"activeStory\\\" style=\\\"margin-top: 40px;\\\" class=\\\"table\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td><button (click)=\\\"sendVote(1);\\\" class=\\\"btn btn-default\\\">1</button></td>\\r\\n            <td><button (click)=\\\"sendVote(2);\\\" class=\\\"btn btn-default\\\">2</button></td>\\r\\n            <td><button (click)=\\\"sendVote(3);\\\" class=\\\"btn btn-default\\\">3</button></td>\\r\\n            <td><button (click)=\\\"sendVote(5);\\\" class=\\\"btn btn-default\\\">5</button></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><button (click)=\\\"sendVote(8);\\\" class=\\\"btn btn-default\\\">8</button></td>\\r\\n            <td><button (click)=\\\"sendVote(13);\\\" class=\\\"btn btn-default\\\">13</button></td>\\r\\n            <td><button (click)=\\\"sendVote(21);\\\" class=\\\"btn btn-default\\\">21</button></td>\\r\\n            <td><button (click)=\\\"sendVote(34);\\\" class=\\\"btn btn-default\\\">34</button></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><button (click)=\\\"sendVote(55);\\\" class=\\\"btn btn-default\\\">55</button></td>\\r\\n            <td><button (click)=\\\"sendVote(89);\\\" class=\\\"btn btn-default\\\">89</button></td>\\r\\n            <td><button (click)=\\\"sendVote(144);\\\" class=\\\"btn btn-default\\\">134</button></td>\\r\\n            <td><button (click)=\\\"sendVote(233);\\\" class=\\\"btn btn-default\\\">233</button></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div *ngIf=\\\"sentVote\\\">{{sentVote}} Voted</div>\\r\\n      <div *ngIf=\\\"!sentVote\\\" style=\\\"text-align: center;\\\">Please Vote!!!</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <label for=\\\"scrumMasterPanel\\\" style=\\\"padding-left: 0\\\" class=\\\"col-md-12\\\">Scrum Master Panel</label>\\r\\n      <small>{{activeStory}} is active</small>\\r\\n      <table id=\\\"scrumMasterPanel\\\" style=\\\"margin-top: 15px;\\\" class=\\\"table\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let vote of session?.StoryList[activeStoryIndex].Votes; index as i\\\">\\r\\n            <td>\\r\\n              {{vote.VoterName}}\\r\\n            </td>\\r\\n            <td>\\r\\n              {{vote.StoryPoint}}\\r\\n              <!--<div *ngIf=\\\"!checkIfEveryBodyVote() && !vote.StoryPoint\\\">\\r\\n                Not Voted\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!checkIfEveryBodyVote() && vote.StoryPoint\\\">\\r\\n                Voted\\r\\n              </div>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <div *ngIf=\\\"isAllVoted\\\">\\r\\n        <div *ngIf=\\\"!isDifferentVotes\\\">Seems team has different votes</div>\\r\\n        <br/>\\r\\n        Please discuss and finalize the score below textbox\\r\\n        <label for=\\\"finalScore\\\" style=\\\"padding-left: 0; padding-top: 10px\\\" class=\\\"col-md-12\\\">Final Score</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"finalScore\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"finalScore\\\">\\r\\n      </div>\\r\\n      <br />\\r\\n      <button [ngClass]=\\\"{disabled : !isAllVoted}\\\" class=\\\"btn btn-default col-md-12\\\" style=\\\"text-align: center\\\" (click)=\\\"isAllVoted && sendFinalScore();\\\">\\r\\n        End Voting For {{activeStory}}\\r\\n      </button>\\r\\n      <br />\\r\\n      <br />\\r\\n      <div style=\\\"text-align: center;\\\">You can not end voting till each teammate voted</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ConnectionResolver } from '../helpers/signalResolver';\r\nimport { BroadcastEventListener } from 'ng2-signalr';\r\n\r\n@Component({\r\n  selector: 'app-viewasscrummaster',\r\n  templateUrl: './viewasscrummaster.component.html',\r\n})\r\nexport class ViewAsScrumMasterComponent implements OnInit {\r\n  baseUrl;\r\n  sessionName;\r\n  session;\r\n  activeStory;\r\n  activeStoryIndex;\r\n  sentVote;\r\n  isAllVoted = false;\r\n  finalScore = 0;\r\n  encodedSessionName;\r\n  sessionFinished = false;\r\n  noSuchSession = false;\r\n  isSessionFull = false;\r\n  isDifferentVotes = false;\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  beforeunloadHandler(event) {\r\n    this.leaveSession();\r\n  };\r\n\r\n  leaveSession() {\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      c.invoke('LeaveSession', this.sessionName).then(() => {\r\n        console.log(\"Çıkış yapıldı.\");\r\n      });\r\n    });\r\n  }\r\n\r\n  constructor(private toastr: ToastrService,\r\n    private router: Router, private route: ActivatedRoute, private connectionResolver: ConnectionResolver) {\r\n  }\r\n\r\n  checkIfEveryBodyVote() {\r\n    for (var i = 0; i < this.session.StoryList[this.activeStoryIndex].Votes.length; i++) {\r\n      if (this.session.StoryList[this.activeStoryIndex].Votes[i].StoryPoint == null) {\r\n        console.log(\"storypoint\", this.session.StoryList[this.activeStoryIndex].Votes[i].StoryPoint);\r\n        this.isAllVoted = false;\r\n        return;\r\n      }\r\n    }\r\n    console.log(\"isAllVoted true\");\r\n    this.isAllVoted = true;\r\n  }\r\n\r\n  sendFinalScore() {\r\n    console.log(\"SendFinalScore \", this.sessionName, this.activeStory, this.activeStoryIndex, this.finalScore);\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      c.invoke('SendFinalScore', this.sessionName, this.activeStory, this.activeStoryIndex, this.finalScore).then(() => {\r\n      });\r\n    });\r\n  }\r\n\r\n  sendVote(storyPoint) {\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      c.invoke('SendVote', this.sessionName, this.activeStory, storyPoint).then(() => {\r\n        this.sentVote = storyPoint;\r\n      });\r\n    });\r\n  }\r\n\r\n  showSuccess(msg) {\r\n    this.toastr.success(msg,\r\n      'Success',\r\n      {\r\n        timeOut: 3000\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.sessionName = this.route.snapshot.params.sessionName;\r\n    this.route.params.subscribe(paramsId => {\r\n      this.sessionName = paramsId.sessionName;\r\n      this.baseUrl = window.location.origin;\r\n      this.encodedSessionName = encodeURIComponent(this.sessionName);\r\n    });\r\n\r\n    this.connectionResolver.getSignalR().then((c) => {\r\n      let onCreateSession = new BroadcastEventListener('CreateSessionResult');\r\n      let onSendVote = new BroadcastEventListener('SendVoteResult');\r\n      let onJoinSession = new BroadcastEventListener('JoinSessionResult');\r\n      let onSendFinalScore = new BroadcastEventListener('SendFinalScoreResult');\r\n      let onSessionFinished = new BroadcastEventListener('SessionFinished');\r\n      c.listen(onSessionFinished);\r\n      c.listen(onJoinSession);\r\n      c.listen(onCreateSession);\r\n      c.listen(onSendVote);\r\n      c.listen(onSendFinalScore);\r\n\r\n      onSessionFinished.subscribe((result: any) => {\r\n        console.log(\"SessionFinished: \", result);\r\n        this.sessionFinished = true;\r\n        this.showSuccess(result);\r\n      });\r\n\r\n      onSendFinalScore.subscribe((result: any) => {\r\n        console.log(\"SendFinalScoreResult: \", result);\r\n        this.session = result;\r\n        this.setActiveStory();\r\n        this.sentVote = null;\r\n        this.finalScore = 0;\r\n        this.isDifferentVotes = false;\r\n        this.checkIfEveryBodyVote();\r\n      });\r\n\r\n      onJoinSession.subscribe((result: any) => {\r\n        console.log(\"JoinSessionResult: \", result);\r\n        if (result === \"Session is full!\")\r\n          this.isSessionFull = true;\r\n        else if (result === \"There is no such session!\")\r\n          this.noSuchSession = true;\r\n        else {\r\n          this.session = result;\r\n        }\r\n      });\r\n\r\n      onSendVote.subscribe((result: any) => {\r\n        console.log(\"SendVoteResult: \", result);\r\n        this.session = result;\r\n        this.checkIfEveryBodyVote();\r\n        if (this.isAllVoted) {\r\n          if (this.session.StoryList[this.activeStoryIndex].Votes.every(x => x.StoryPoint == this.session.StoryList[this.activeStoryIndex].Votes[0].StoryPoint)) {\r\n            console.log(\"Final Score automatically set!\");\r\n            this.isDifferentVotes = true;\r\n            var newFinalScore = this.session.StoryList[this.activeStoryIndex].Votes[0].StoryPoint;\r\n            this.finalScore = newFinalScore;\r\n          }\r\n        }\r\n      });\r\n\r\n      onCreateSession.subscribe((result: any) => {\r\n        console.log(\"CreateSessionResult: \", result);\r\n        this.session = result;\r\n        this.setActiveStory();\r\n      });\r\n    });\r\n  }\r\n\r\n  setActiveStory() {\r\n    for (var i = 0; i < this.session.StoryList.length; i++) {\r\n      if (this.session.StoryList[i].Status === 0) {\r\n        this.activeStory = this.session.StoryList[i].StoryName;\r\n        this.activeStoryIndex = i;\r\n      }\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}